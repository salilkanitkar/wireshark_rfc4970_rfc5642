Index: epan/dissectors/packet-ospf.c
===================================================================
--- epan/dissectors/packet-ospf.c	(revision 39424)
+++ epan/dissectors/packet-ospf.c	(working copy)
@@ -120,6 +120,13 @@
 #define OSPF_V3_OPTIONS_I               0x0400
 #define OSPF_V3_OPTIONS_F               0x0800
 
+#define OSPF_RI_OPTIONS_GRC             0x80
+#define OSPF_RI_OPTIONS_GRH             0x40
+#define OSPF_RI_OPTIONS_SRS             0x20
+#define OSPF_RI_OPTIONS_TES             0x10
+#define OSPF_RI_OPTIONS_P2PLAN          0x08
+#define OSPF_RI_OPTIONS_ETE             0x04
+
 #define OSPF_LLS_EXT_OPTIONS_LR         0x00000001
 #define OSPF_LLS_EXT_OPTIONS_RS         0x00000002
 
@@ -178,6 +185,8 @@
 /* Known opaque LSAs */
 #define OSPF_LSA_MPLS_TE        1
 #define OSPF_LSA_GRACE        3
+#define OSPF_LSA_OPAQUE_RI         4
+#define OSPF_LSA_UNKNOWN   11
 #define OSPF_RESTART_REASON_UNKNOWN   0
 #define OSPF_RESTART_REASON_SWRESTART 1
 #define OSPF_RESTART_REASON_SWRELOAD  2
@@ -222,6 +231,7 @@
     {OSPF_LSA_MPLS_TE, "Traffic Engineering LSA"                },
     {2,                "Sycamore Optical Topology Descriptions" },
     {OSPF_LSA_GRACE,   "grace-LSA"                              },
+    {OSPF_LSA_OPAQUE_RI, "Optional Router Capabilities Opaque RI LSA" },
     {0,                NULL                                     }
 };
 
@@ -312,6 +322,7 @@
 static gint ett_ospf_lsa_router_link = -1;
 static gint ett_ospf_lsa_upd = -1;
 static gint ett_ospf_v2_options = -1;
+static gint ett_ospf_ri_options = -1;
 static gint ett_ospf_v3_options = -1;
 static gint ett_ospf_dbd = -1;
 static gint ett_ospf_lls_data_block = -1;
@@ -344,9 +355,9 @@
 static gint ett_ospf_lsa_oif_tna = -1;
 static gint ett_ospf_lsa_oif_tna_stlv = -1;
 static gint ett_ospf_lsa_grace_tlv = -1;
+static gint ett_ospf_lsa_opaque_ri = -1;
 
 
-
 static const true_false_string tfs_v2_options_dc = {
     "Demand Circuits are supported",
     "Demand Circuits are NOT supported"
@@ -379,6 +390,32 @@
     "DN-bit is SET",
     "DN-bit is NOT set"
 };
+
+static const true_false_string tfs_ri_options_grc = {
+    "OSPF Graceful Restart Capable",
+    "NOT OSPF Graceful Restart Capable"
+};
+static const true_false_string tfs_ri_options_grh = {
+    "OSPF Graceful Restart Helper",
+    "NOT OSPF Graceful Restart Helper"
+};
+static const true_false_string tfs_ri_options_srs = {
+    "OSPF Stub Router Support",
+    "NOT OSPF Stub Router Support"
+};
+static const true_false_string tfs_ri_options_tes = {
+    "OSPF Traffic Engineering Support",
+    "NOT OSPF Traffic Engineering Support"
+};
+static const true_false_string tfs_ri_options_p2plan = {
+    "OSPF point-to-point over LAN",
+    "NOT OSPF point-to-point over LAN"
+};
+static const true_false_string tfs_ri_options_ete = {
+    "OSPF Experimental TE",
+    "NOT OSPF Experimental TE"
+};
+
 static const true_false_string tfs_v3_options_v6 = {
     "V6 is SET",
     "V6 is NOT set"
@@ -568,6 +605,7 @@
     OSPFF_LS_EXTATTR,
     OSPFF_LS_OPAQUE,
 
+    OSPFF_ROUTER_ID,
     OSPFF_SRC_ROUTER,
     OSPFF_ADV_ROUTER,
     OSPFF_LS_MPLS,
@@ -593,6 +631,15 @@
     OSPFF_V2_OPTIONS_DC,
     OSPFF_V2_OPTIONS_O,
     OSPFF_V2_OPTIONS_DN,
+
+    OSPFF_RI_OPTIONS,
+    OSPFF_RI_OPTIONS_GRC,
+    OSPFF_RI_OPTIONS_GRH,
+    OSPFF_RI_OPTIONS_SRS,
+    OSPFF_RI_OPTIONS_TES,
+    OSPFF_RI_OPTIONS_P2PLAN,
+    OSPFF_RI_OPTIONS_ETE,
+
     OSPFF_V3_OPTIONS,
     OSPFF_V3_OPTIONS_V6,
     OSPFF_V3_OPTIONS_E,
@@ -748,6 +795,14 @@
     OSPFF_V2_OPTIONS_E,
     OSPFF_V2_OPTIONS_MT
 };
+static int bf_ri_options[] = {
+    OSPFF_RI_OPTIONS_GRC,
+    OSPFF_RI_OPTIONS_GRH,
+    OSPFF_RI_OPTIONS_SRS,
+    OSPFF_RI_OPTIONS_TES,
+    OSPFF_RI_OPTIONS_P2PLAN,
+    OSPFF_RI_OPTIONS_ETE
+};
 static int bf_v3_options[] = {
     OSPFF_V3_OPTIONS_F,
     OSPFF_V3_OPTIONS_I,
@@ -815,6 +870,10 @@
     OSPFF_V3_PREFIX_OPTION, &ett_ospf_v3_prefix_options,
     bf_v3_prefix_options, array_length(bf_v3_prefix_options)
 };
+static bitfield_info bfinfo_ri_options = {
+    OSPFF_RI_OPTIONS, &ett_ospf_ri_options,
+    bf_ri_options, array_length(bf_ri_options)
+};
 
 #define MAX_OPTIONS_LEN 128
 static void
@@ -955,6 +1014,8 @@
     guint32 areaid;
     guint8  address_family = OSPF_AF_6;
 
+    /* guint32 routerid; */
+    
     col_set_str(pinfo->cinfo, COL_PROTOCOL, "OSPF");
     col_clear(pinfo->cinfo, COL_INFO);
 
@@ -989,6 +1050,7 @@
                             version);
         proto_tree_add_item(ospf_header_tree, hf_ospf_filter[OSPFF_MSG_TYPE],
                             tvb, 1, 1, FALSE);
+
         if (ospf_msg_type_to_filter(packet_type) != -1) {
             hidden_item = proto_tree_add_item(ospf_header_tree,
                                               hf_ospf_filter[ospf_msg_type_to_filter(packet_type)],
@@ -999,6 +1061,13 @@
                             ospflen);
         proto_tree_add_item(ospf_header_tree, hf_ospf_filter[OSPFF_SRC_ROUTER],
                             tvb, 4, 4, FALSE);
+	/* routerid=tvb_get_ntohl(tvb, 4);
+	proto_tree_add_text(ospf_header_tree, tvb, 4, 4, "Router ID: %s", 
+			    tvb_ip_to_str(tvb, 4));
+	*/
+        proto_tree_add_item(ospf_header_tree, hf_ospf_filter[OSPFF_ROUTER_ID],
+                            tvb, 4, 4, FALSE);
+
         areaid=tvb_get_ntohl(tvb,8);
         proto_tree_add_text(ospf_header_tree, tvb, 8, 4, "Area ID: %s%s",
                             tvb_ip_to_str(tvb, 8), areaid == 0 ? " (Backbone)" : "");
@@ -2291,6 +2360,47 @@
 }
 
 /*
+ * Dissect Optional Router Capabilities Opaque LSA
+ */
+static void
+dissect_ospf_lsa_opaque_ri(tvbuff_t *tvb, int offset, proto_tree *tree,
+                      guint32 length)
+{
+    proto_item *ti;
+    proto_tree *ri_tree;
+    guint8 options;
+ 
+    int tlv_type;
+    int tlv_length;
+    int tlv_end_offset;
+
+    ti = proto_tree_add_text(tree, tvb, offset, length,
+                             "Router Informational Capabilities LSA");
+
+    ri_tree = proto_item_add_subtree(ti, ett_ospf_lsa_opaque_ri);
+
+    while (length != 0) {
+	tlv_type = tvb_get_ntohs(tvb, offset);
+	tlv_length = tvb_get_ntohs(tvb, offset + 2);
+	tlv_end_offset = offset + tlv_length + 4;
+
+	if (tlv_type != 1) {		    
+   	   proto_tree_add_text(ri_tree, tvb, offset, 8, "Unknown type of Router Informational Capabilities LSA");
+	} else {
+	   proto_tree_add_text(ri_tree, tvb, offset, 2, "Type: %s (%u)",
+                        "Router Informatinal Capabilities TLV", tlv_type);
+
+   	   proto_tree_add_text(ri_tree, tvb, offset + 2, 2, "Length: %u", tlv_length);
+
+	   options = tvb_get_guint8(tvb, offset + 4);
+           dissect_ospf_bitfield(ri_tree, tvb, offset + 4, &bfinfo_ri_options); 
+	}
+	offset += tlv_length + 4;
+        length -= tlv_length + 4;
+    }
+}
+
+/*
  * Dissect opaque LSAs
  */
 static void
@@ -2302,6 +2412,9 @@
     case OSPF_LSA_MPLS_TE:
         dissect_ospf_lsa_mpls(tvb, offset, tree, length);
         break;
+    case OSPF_LSA_OPAQUE_RI:
+	dissect_ospf_lsa_opaque_ri(tvb, offset, tree, length);
+        break;
     case OSPF_LSA_GRACE:
         dissect_ospf_lsa_grace_tlv(tvb, offset, tree, length);
         break;
@@ -2340,6 +2453,8 @@
 
     /* opaque LSA */
     guint8               ls_id_type;
+    guint8               ls_ri_opaque_field1;
+    guint16              ls_ri_opaque_field2;
 
     ls_type = tvb_get_guint8(tvb, offset + 3);
     ls_length = tvb_get_ntohs(tvb, offset + 18);
@@ -2390,6 +2505,21 @@
                                 tvb, offset + 6, 2, FALSE);
             break;
 
+	case OSPF_LSA_OPAQUE_RI:
+	   ls_ri_opaque_field1 = tvb_get_guint8(tvb, offset + 5);	
+	   if ( ls_ri_opaque_field1 != 0 ) 
+		ls_id_type = OSPF_LSA_UNKNOWN;
+	   else {
+	       ls_ri_opaque_field2 = tvb_get_ntohs(tvb, offset + 6);
+  	       if ( ls_ri_opaque_field2 != 0) 
+		  ls_id_type = OSPF_LSA_UNKNOWN;
+               else {
+	          proto_tree_add_text(ospf_lsa_tree, tvb, offset + 4, 1, "Optional Router Capabilities Opaque RI LSA: %u",
+                                tvb_get_guint8(tvb, offset + 4));
+		}
+	   }
+	   break;
+
         default:
             proto_tree_add_text(ospf_lsa_tree, tvb, offset + 5, 3, "Link State ID Opaque ID: %u",
                                 tvb_get_ntoh24(tvb, offset + 5));
@@ -3127,6 +3257,9 @@
            NULL, HFILL }},
 
         /* Other interesting OSPF values */
+        {&hf_ospf_filter[OSPFF_ROUTER_ID],
+         { "Router ID", "ospf.routerid", FT_IPv4, BASE_NONE, NULL, 0x0,
+           NULL, HFILL }},
 
         {&hf_ospf_filter[OSPFF_SRC_ROUTER],
          { "Source OSPF Router", "ospf.srcrouter", FT_IPv4, BASE_NONE, NULL, 0x0,
@@ -3204,6 +3337,29 @@
         {&hf_ospf_filter[OSPFF_V2_OPTIONS_DN],
          { "DN", "ospf.v2.options.dn", FT_BOOLEAN, 8,
            TFS(&tfs_v2_options_dn), OSPF_V2_OPTIONS_DN, NULL, HFILL }},
+
+        {&hf_ospf_filter[OSPFF_RI_OPTIONS],
+         { "RI Options", "ospf.ri.options", FT_UINT8, BASE_HEX,
+           NULL, 0x0, NULL, HFILL }},
+        {&hf_ospf_filter[OSPFF_RI_OPTIONS_GRC],
+         { "GRC", "ospf.ri.options.grc", FT_BOOLEAN, 8,
+           TFS(&tfs_ri_options_grc), OSPF_RI_OPTIONS_GRC, NULL, HFILL }},
+        {&hf_ospf_filter[OSPFF_RI_OPTIONS_GRH],
+         { "GRH", "ospf.ri.options.grh", FT_BOOLEAN, 8,
+           TFS(&tfs_ri_options_grh), OSPF_RI_OPTIONS_GRH, NULL, HFILL }},
+        {&hf_ospf_filter[OSPFF_RI_OPTIONS_SRS],
+         { "SRS", "ospf.ri.options.srs", FT_BOOLEAN, 8,
+           TFS(&tfs_ri_options_srs), OSPF_RI_OPTIONS_SRS, NULL, HFILL }},
+        {&hf_ospf_filter[OSPFF_RI_OPTIONS_TES],
+         { "TES", "ospf.ri.options.tes", FT_BOOLEAN, 8,
+           TFS(&tfs_ri_options_tes), OSPF_RI_OPTIONS_TES, NULL, HFILL }},
+        {&hf_ospf_filter[OSPFF_RI_OPTIONS_P2PLAN],
+         { "P2PLAN", "ospf.ri.options.p2plan", FT_BOOLEAN, 8,
+           TFS(&tfs_ri_options_p2plan), OSPF_RI_OPTIONS_P2PLAN, NULL, HFILL }},
+        {&hf_ospf_filter[OSPFF_RI_OPTIONS_ETE],
+         { "ETE", "ospf.ri.options.ete", FT_BOOLEAN, 8,
+           TFS(&tfs_ri_options_ete), OSPF_RI_OPTIONS_ETE, NULL, HFILL }},
+
         {&hf_ospf_filter[OSPFF_V3_OPTIONS],
          { "Options", "ospf.v3.options", FT_UINT24, BASE_HEX,
            NULL, 0x0, NULL, HFILL }},
@@ -3414,10 +3570,12 @@
         &ett_ospf_lsa_mpls_link,
         &ett_ospf_lsa_mpls_link_stlv,
         &ett_ospf_lsa_mpls_link_stlv_admingrp,
+	&ett_ospf_lsa_opaque_ri,
         &ett_ospf_lsa_oif_tna,
         &ett_ospf_lsa_oif_tna_stlv,
         &ett_ospf_lsa_grace_tlv,
         &ett_ospf_v2_options,
+        &ett_ospf_ri_options,
         &ett_ospf_v3_options,
         &ett_ospf_dbd,
         &ett_ospf_lls_data_block,
